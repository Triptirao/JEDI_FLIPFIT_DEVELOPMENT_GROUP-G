package com.flipfit.bean;

/**
 * The {@code User} class represents a user within the FlipFit system.
 * This class is a **Plain Old Java Object (POJO)** that encapsulates
 * user-related data, including personal details, contact information,
 * and authentication credentials.
 * <p>
 * It provides two constructors: one for creating a new user (without a database-assigned ID)
 * and another for instantiating a user object from an existing database record.
 * </p>
 *
 * @author YourName
 * @version 1.0
 * @since 2025-08-22
 */
public class User {

    /**
     * The unique identifier for the user.
     */
    private int userId;

    /**
     * The full name of the user.
     */
    private String fullName;

    /**
     * The email address of the user, used for login.
     */
    private String email;

    /**
     * The password of the user. This should be a hashed value in a real-world application.
     */
    private String password;

    /**
     * The phone number of the user.
     */
    private long userPhone;

    /**
     * The city where the user is located.
     */
    private String city;

    /**
     * The postal code of the user's location.
     */
    private int pinCode;

    /**
     * The role of the user (e.g., "Customer", "Gym Owner"). This is set after
     * fetching the user from the database.
     */
    private String role; // Field to hold the role after it's determined from the database

    /**
     * Constructs a new {@code User} object for registration.
     * The {@code userId} will be generated by the database upon insertion.
     *
     * @param fullName  The user's full name.
     * @param email     The user's email.
     * @param password  The user's password.
     * @param userPhone The user's phone number.
     * @param city      The user's city.
     * @param pinCode   The user's postal code.
     */
    public User(String fullName, String email, String password, long userPhone, String city, int pinCode) {
        this.fullName = fullName;
        this.email = email;
        this.password = password;
        this.userPhone = userPhone;
        this.city = city;
        this.pinCode = pinCode;
    }

    /**
     * Constructs a new {@code User} object with all fields initialized, typically from a database record.
     *
     * @param userId    The unique identifier for the user.
     * @param fullName  The user's full name.
     * @param email     The user's email.
     * @param password  The user's password.
     * @param userPhone The user's phone number.
     * @param city      The user's city.
     * @param pinCode   The user's postal code.
     */
    public User(int userId, String fullName, String email, String password, long userPhone, String city, int pinCode) {
        this.userId = userId;
        this.fullName = fullName;
        this.email = email;
        this.password = password;
        this.userPhone = userPhone;
        this.city = city;
        this.pinCode = pinCode;
    }

    /**
     * Retrieves the unique identifier of the user.
     *
     * @return The user ID.
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the unique identifier of the user.
     *
     * @param userId The user ID to set.
     */
    public void setUserId(int userId) {
        this.userId = userId;
    }

    /**
     * Retrieves the full name of the user.
     *
     * @return The full name.
     */
    public String getFullName() {
        return fullName;
    }

    /**
     * Sets the full name of the user.
     *
     * @param fullName The full name to set.
     */
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    /**
     * Retrieves the email address of the user.
     *
     * @return The email address.
     */
    public String getEmail() {
        return email;
    }

    /**
     * Sets the email address of the user.
     *
     * @param email The email address to set.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Retrieves the password of the user.
     *
     * @return The password string.
     */
    public String getPassword() {
        return password;
    }

    /**
     * Sets the password of the user.
     *
     * @param password The password to set.
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Retrieves the phone number of the user.
     *
     * @return The phone number.
     */
    public long getUserPhone() {
        return userPhone;
    }

    /**
     * Sets the phone number of the user.
     *
     * @param userPhone The phone number to set.
     */
    public void setUserPhone(long userPhone) {
        this.userPhone = userPhone;
    }

    /**
     * Retrieves the city where the user is located.
     *
     * @return The city name.
     */
    public String getCity() {
        return city;
    }

    /**
     * Sets the city of the user.
     *
     * @param city The city to set.
     */
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Retrieves the postal code of the user.
     *
     * @return The postal code.
     */
    public int getPinCode() {
        return pinCode;
    }

    /**
     * Sets the postal code of the user.
     *
     * @param pinCode The postal code to set.
     */
    public void setPinCode(int pinCode) {
        this.pinCode = pinCode;
    }

    /**
     * Retrieves the role of the user.
     *
     * @return The user's role string.
     */
    public String getRole() {
        return role;
    }

    /**
     * Sets the role of the user.
     *
     * @param role The role string to set.
     */
    public void setRole(String role) {
        this.role = role;
    }
}